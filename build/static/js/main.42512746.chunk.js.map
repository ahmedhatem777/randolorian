{"version":3,"sources":["components/header/header.component.js","components/action/action.component.js","components/option/option.component.js","components/options/options.component.js","components/add-option/add-option.component.js","components/choice-modal/choice-modal.component.js","app.js","index.js"],"names":["Header","props","className","title","subtitles","Action","Button","style","color","variant","onClick","chooseHandler","disabled","hasOptions","Option","option","e","removeOneHandler","Options","Card","removeAllHandler","options","map","AddOption","state","error","undefined","formSubmit","event","preventDefault","newOption","target","elements","value","trim","handleAddOption","focus","setState","Form","onSubmit","this","InputGroup","FormControl","name","autoComplete","placeholder","Append","type","Alert","React","Component","ChoiceModal","Modal","size","show","selectedOption","onHide","closeHandler","centered","closeButton","Title","Body","Footer","App","subtitle","addNewOption","indexOf","prevState","concat","removeOneOption","filter","optionElement","removeAllOptions","chooseOption","randomNumber","Math","floor","random","length","chosenOption","closeModal","json","localStorage","getItem","JSON","parse","prevProps","stringify","setItem","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.42512746.chunk.js","sourcesContent":["import React from 'react';\r\nimport './header.component.scss';\r\n\r\nconst Header = (props) => (\r\n        <div className=\"header justify-content-center\">\r\n            <h1>{props.title}</h1>\r\n            <h2>{props.subtitles}</h2>\r\n        </div>\r\n)\r\n\r\nexport default Header;","import React from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport './action.component.scss'\r\n\r\nconst Action = (props) =>(\r\n        <div className=\"action-container\">\r\n            <Button\r\n                style={{ color: \"#CF5C36\"}}\r\n                className=\"btn rounded-0 btn-lg\"\r\n                variant=\"primary\"\r\n                onClick={props.chooseHandler}\r\n                disabled={!props.hasOptions}\r\n            >\r\n                Show me the way.\r\n            </Button>\r\n        </div>\r\n    )\r\n\r\nexport default Action;","import React from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport './option.component.scss';\r\n\r\nconst Option = (props) => (\r\n    <div className=\"flexed\">\r\n        <p className=\"option-text\"> <strong>{props.option}</strong></p>\r\n        <Button\r\n            className=\"btn btn-outline-secondary rounded-0 btn-sm\"\r\n            onClick={(e) => props.removeOneHandler(props.option)}\r\n        >\r\n            X\r\n        </Button>\r\n    </div>\r\n)\r\n\r\nexport default Option;","import React from 'react';\r\nimport Option from '../option/option.component';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport './options.component.scss';\r\n\r\nconst Options = (props) => (\r\n    <Card className=\"card text-secondary bg-primary rounded-0\">\r\n        <div className=\"card-header\">\r\n            <h4 className=\"card-header-text\">Options:</h4>\r\n            <Button\r\n                className=\"btn btn-outline-secondary rounded-0\"\r\n                onClick={props.removeAllHandler}\r\n                disabled={!props.hasOptions}\r\n            >\r\n                Remove All\r\n            </Button>\r\n        </div>\r\n\r\n        <div className=\"card-body overflow-auto\">\r\n            {\r\n                props.options.map(option => (\r\n                    <Option\r\n                        key={option}\r\n                        option={option}\r\n                        removeOneHandler={props.removeOneHandler}\r\n                    />))\r\n            }\r\n\r\n            {\r\n                !props.hasOptions\r\n                &&\r\n                <p className=\"options-alert text-center text-secondary\">\r\n                    <strong>Please add some options.</strong>\r\n                </p>\r\n            }\r\n        </div>\r\n    </Card>\r\n)\r\n\r\nexport default Options;\r\n","import React from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport './add-option.component.scss';\r\n\r\nclass AddOption extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    state = {\r\n        error: undefined\r\n    }\r\n\r\n    formSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        const newOption = event.target.elements.option.value.trim();\r\n\r\n        //Calling the addNewOption method declared in the App component, and giving it the new option text, and atching error if one\r\n        const error = this.props.handleAddOption(newOption);\r\n\r\n        //Clearing the input field and refocusing on it if there is no error\r\n        if (!error) event.target.elements.option.value = '';\r\n\r\n        event.target.elements.option.focus();\r\n\r\n        this.setState(() => ({ error }));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <Form className=\"my-form\" onSubmit={this.formSubmit}>\r\n                    <InputGroup className=\"my-input\">\r\n                        <FormControl\r\n                            name=\"option\"\r\n                            autoComplete=\"off\"\r\n                            className=\"rounded-0\"\r\n                            placeholder=\"Your Option\"\r\n                        />\r\n                        <InputGroup.Append>\r\n                            <Button\r\n                                type=\"submit\"\r\n                                className=\"btn-primary text-secondary rounded-0\"\r\n                            >\r\n                                <strong>Add</strong>\r\n                            </Button>\r\n                        </InputGroup.Append>\r\n                    </InputGroup>\r\n                </Form>\r\n                {\r\n                    this.state.error &&\r\n                    <Alert className=\"bg-primary text-secondary rounded-0 my-alert\">\r\n                        {this.state.error}\r\n                    </Alert>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddOption;","import React from 'react';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nconst ChoiceModal = (props) => (\r\n    <Modal\r\n        size=\"sm\"\r\n        show={!!props.selectedOption}\r\n        onHide={props.closeHandler}\r\n        centered\r\n    >\r\n        <Modal.Header closeButton>\r\n            <Modal.Title>This is the way</Modal.Title>\r\n        </Modal.Header>\r\n\r\n        <Modal.Body>\r\n            {props.selectedOption}\r\n        </Modal.Body>\r\n\r\n        <Modal.Footer>\r\n            <Button\r\n                variant=\"secondary\"\r\n                onClick={props.closeHandler}\r\n            >\r\n                Close\r\n                </Button>\r\n        </Modal.Footer>\r\n    </Modal>\r\n)\r\n\r\nexport default ChoiceModal;","import React from 'react';\r\nimport Header from './components/header/header.component';\r\nimport Action from './components/action/action.component';\r\nimport Options from './components/options/options.component';\r\nimport AddOption from './components/add-option/add-option.component';\r\nimport ChoiceModal from './components/choice-modal/choice-modal.component';\r\nimport './styles/custom-bootstrap.scss';\r\nimport './styles/_container.scss';\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    state = {\r\n        options: [],\r\n        selectedOption: undefined,\r\n        title: 'The Randolorian',\r\n        subtitle: 'I will decide...'\r\n    }\r\n\r\n    addNewOption = (option) => {\r\n        //Returning error if one\r\n        if (!option) {\r\n            return `Don't add spaces!`;\r\n        }\r\n        else if (this.state.options.indexOf(option) > -1) {\r\n            return `Option already exists!`;\r\n        }\r\n\r\n        this.setState((prevState) => ({ options: prevState.options.concat(option) }))\r\n    }\r\n\r\n    removeOneOption = (option) => {\r\n        this.setState((prevState) => ({\r\n            options: prevState.options.filter((optionElement) => optionElement !== option)\r\n        }))\r\n    }\r\n\r\n    removeAllOptions = () => {\r\n        this.setState(() => ({ options: [] }))\r\n    }\r\n\r\n    chooseOption = () => {\r\n        const randomNumber = Math.floor(Math.random() * this.state.options.length);\r\n        const chosenOption = this.state.options[randomNumber];\r\n        this.setState( () => ({selectedOption: chosenOption}))\r\n    }\r\n\r\n    closeModal = () => {\r\n        this.setState(() => ({selectedOption: undefined}))\r\n    }\r\n   \r\n    componentDidMount() {\r\n        try {\r\n            const json = localStorage.getItem('options');\r\n            const options = JSON.parse(json);\r\n\r\n            if (options) this.setState(() => ({ options }));\r\n        }\r\n        catch (e) {\r\n            this.setState(() => ({ options: [] }));\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevState.options.length !== this.state.options.length) {\r\n\r\n            //Taking new options array and storing it in the local storage\r\n            const json = JSON.stringify(this.state.options);\r\n            localStorage.setItem('options', json);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid my-container\">\r\n\r\n                <div className=\"row header-row\">\r\n                    <div className=\"col col-header\">\r\n                        <Header\r\n                            title={this.state.title}\r\n                            subtitles={this.state.subtitle}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row justify-content-center action-row\">\r\n                    <Action\r\n                        hasOptions={this.state.options.length > 1}\r\n                        chooseHandler={this.chooseOption}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"row justify-content-center options-row\">\r\n                    <div className=\"col-md-3\">\r\n                        <Options\r\n                            options={this.state.options}\r\n                            hasOptions={this.state.options.length > 0}\r\n                            removeAllHandler={this.removeAllOptions}\r\n                            removeOneHandler={this.removeOneOption}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row justify-content-center add-option-row\">\r\n                    <div className=\"col-md-4\">\r\n                        <AddOption\r\n                            handleAddOption={this.addNewOption}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <ChoiceModal\r\n                    selectedOption={this.state.selectedOption}\r\n                    closeHandler={this.closeModal}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './app';\r\nimport 'modern-normalize/modern-normalize.css'\r\nimport './styles/custom-bootstrap.scss'\r\nimport './styles/global-styles.scss'\r\n\r\nReactDOM.render(<App />, document.getElementById('app'));\r\n"],"sourceRoot":""}